// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Poober.Models;
using System;

namespace Poober.Migrations
{
    [DbContext(typeof(PooberContext))]
    partial class PooberContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Poober.Models.FinishedJob", b =>
                {
                    b.Property<int>("FinishedJobID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("FinishDateTime");

                    b.Property<int>("JobID");

                    b.Property<int?>("PooperID");

                    b.Property<int?>("ScooperID");

                    b.Property<int>("TotalTime");

                    b.HasKey("FinishedJobID");

                    b.HasIndex("PooperID");

                    b.HasIndex("ScooperID");

                    b.ToTable("finishedJobs");
                });

            modelBuilder.Entity("Poober.Models.Job", b =>
                {
                    b.Property<int>("JobID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cost");

                    b.Property<DateTime>("FinishDateTime");

                    b.Property<int>("PooperID");

                    b.Property<string>("PooperNotes")
                        .HasMaxLength(600);

                    b.Property<decimal>("PooperRating");

                    b.Property<int>("ScooperID");

                    b.Property<string>("ScooperNotes")
                        .HasMaxLength(600);

                    b.Property<decimal>("ScooperRating");

                    b.Property<DateTime>("StartDateTime");

                    b.Property<string>("Status")
                        .HasMaxLength(2);

                    b.HasKey("JobID");

                    b.HasIndex("PooperID");

                    b.HasIndex("ScooperID");

                    b.ToTable("jobs");
                });

            modelBuilder.Entity("Poober.Models.Pooper", b =>
                {
                    b.Property<int>("PooperID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(180);

                    b.Property<string>("City")
                        .HasMaxLength(80);

                    b.Property<string>("DogBreeds")
                        .HasMaxLength(280);

                    b.Property<string>("DogNames")
                        .HasMaxLength(280);

                    b.Property<int>("Dogs")
                        .HasMaxLength(10);

                    b.Property<string>("Email")
                        .HasMaxLength(80);

                    b.Property<DateTime>("JoinDate");

                    b.Property<string>("Name")
                        .HasMaxLength(80);

                    b.Property<string>("Notes")
                        .HasMaxLength(1800);

                    b.Property<string>("Password")
                        .HasMaxLength(80);

                    b.Property<string>("Phone")
                        .HasMaxLength(40);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20);

                    b.Property<bool>("RequireAccess");

                    b.Property<string>("Status")
                        .HasMaxLength(2);

                    b.Property<decimal>("YardSize");

                    b.Property<string>("YardsToService");

                    b.HasKey("PooperID");

                    b.ToTable("poopers");
                });

            modelBuilder.Entity("Poober.Models.Scooper", b =>
                {
                    b.Property<int>("ScooperID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(180);

                    b.Property<string>("City")
                        .HasMaxLength(80);

                    b.Property<string>("Email")
                        .HasMaxLength(80);

                    b.Property<DateTime>("JoinDate");

                    b.Property<string>("Name")
                        .HasMaxLength(80);

                    b.Property<string>("Password")
                        .HasMaxLength(80);

                    b.Property<string>("Phone")
                        .HasMaxLength(40);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20);

                    b.Property<string>("Status")
                        .HasMaxLength(2);

                    b.HasKey("ScooperID");

                    b.ToTable("scoopers");
                });

            modelBuilder.Entity("Poober.Models.FinishedJob", b =>
                {
                    b.HasOne("Poober.Models.Pooper")
                        .WithMany("FinishedJobs")
                        .HasForeignKey("PooperID");

                    b.HasOne("Poober.Models.Scooper")
                        .WithMany("FinishedJobs")
                        .HasForeignKey("ScooperID");
                });

            modelBuilder.Entity("Poober.Models.Job", b =>
                {
                    b.HasOne("Poober.Models.Pooper")
                        .WithMany("Jobs")
                        .HasForeignKey("PooperID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Poober.Models.Scooper")
                        .WithMany("Jobs")
                        .HasForeignKey("ScooperID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
